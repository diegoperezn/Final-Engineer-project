'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''
''  MaterialesBusiness.vb
''  Implementation of the Class MaterialesBusiness
''  Generated by Enterprise Architect
''  Created on:      20-ago-2012 04:41:57 p.m.
''  Original author: Diego
''  
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''  Modification history:
''  
''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''



Option Explicit On
Option Strict On

Imports Dominio

Public Class MaterialesBusiness

    Dim maquinaRepo As MaquinaRepositorio
    Dim materialRepo As MaterialesRepositorio
    Dim produccionBusiness As ProduccionBusiness

    Sub New()
        Me.produccionBusiness = BusinessFactory.produccionBusiness
        Me.maquinaRepo = RepositorioFactory.maquinaRepositorio
        Me.materialRepo = RepositorioFactory.materialesRepositorio
    End Sub

    Sub New(ByVal maquinaRepo As MaquinaRepositorio, ByVal materialRepo As MaterialesRepositorio,
            ByVal produccionBusiness As ProduccionBusiness)
        Me.maquinaRepo = maquinaRepo
        Me.materialRepo = materialRepo
        Me.produccionBusiness = produccionBusiness
    End Sub

    Public Sub actualizarMaquina(ByVal maquina As Maquina)
        Me.maquinaRepo.actualizarMaquina(maquina)
    End Sub

    Public Sub crearNuevaMaquina(ByVal tiposPrenda As List(Of TipoPrenda), ByVal velPromedio As Integer,
                                 ByVal cantidadColores As Integer, ByVal anchoCampo As Integer,
                                 ByVal altoCampo As Integer, ByVal nombre As String,
                                 ByVal cabezales As Integer)
        Dim maquina As New Maquina(Nothing, altoCampo, anchoCampo, cabezales, nombre, velPromedio, tiposPrenda, cantidadColores)

        Me.maquinaRepo.grabarMaquina(maquina)

        Me.produccionBusiness.recalcularAgenda()
    End Sub

    Public Function listarMaquinas() As List(Of Maquina)
        Return Me.maquinaRepo.listarMaquinas()
    End Function

    Public Sub modificarMaquina(ByVal maquina As Maquina, ByVal tiposPrenda As List(Of TipoPrenda), ByVal velPromedio As Integer,
                                ByVal cantidadColores As Integer, ByVal anchoCampo As Integer, ByVal altoCampo As Integer,
                                ByVal nombre As String, ByVal cabezales As Integer)
        Dim maquinaBase As Maquina = Me.maquinaRepo.cargarMaquinaPorId(maquina.codMaquina)
        Dim recalcularAgenda As Boolean = False

        If Not maquinaBase.cabezales = maquina.cabezales Then
            recalcularAgenda = True
        End If


        maquina.tiposPrenda = tiposPrenda
        maquina.velocidadPromedio = velPromedio
        maquina.cantidadColores = cantidadColores
        maquina.anchoMargen = anchoCampo
        maquina.altoMargen = altoCampo
        maquina.nombre = nombre
        maquina.cabezales = cabezales

        Me.maquinaRepo.actualizarMaquina(maquina)

        If recalcularAgenda Then
            Me.produccionBusiness.recalcularAgenda()
        End If
    End Sub

    Function cargarMaquinaPorId(ByVal id As Long) As Maquina
        Return Me.maquinaRepo.cargarMaquinaPorId(id)
    End Function

    Function listarColores() As List(Of Color)
        Return Me.materialRepo.listarColores
    End Function

    Public Function listarTipoInsumo() As List(Of TipoInsumo)
        Return Me.materialRepo.listarTipoInsumo()
    End Function

End Class ' MaterialesBusiness