Imports System.Net.Mime.MediaTypeNames

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''
''  Diseño.vb
''  Implementation of the Class Diseño
''  Generated by Enterprise Architect
''  Created on:      09-ago-2012 11:34:32 p.m.
''  Original author: dperez
''  
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''  Modification history:
''  
''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

<Serializable()>
Public Class Diseño

    Private _idDiseño As Long
    Private _alto As Double
    Private _ancho As Double
    Private _nombre As String
    Private _puntadas As Integer
    Private _cliente As Cliente

    Private _pathImagen As String
    Private _pathDetalle As String
    Private _pathArchivoEditable As String
    Private _pathArchivoFinal As String

    Private _insumos As New List(Of DiseñoInsumo)

    Private _historicoEstados As List(Of HistoricoEstadosDiseño)
    Private _estadoActual As EstadoDiseños

    Private _borrado As Boolean

    Sub New(ByVal cod As Long)
        Me.idDiseño = cod
    End Sub

    Sub New()

    End Sub

    Sub New(ByVal id As Long, ByVal alto As Double, ByVal ancho As Double, ByVal nombre As String, ByVal puntadas As Integer,
            ByVal cliente As Cliente, ByVal pathImagen As String, ByVal pathDetalle As String, ByVal pathArchivoEditable As String,
            ByVal pathArchivoFinal As String, ByVal insumos As List(Of DiseñoInsumo), ByVal estadoActual As EstadoDiseños,
            ByVal historicoEstados As List(Of HistoricoEstadosDiseño))
        Me.idDiseño = id
        Me.alto = alto
        Me.ancho = ancho
        Me.nombre = nombre
        Me.puntadas = puntadas
        Me.cliente = cliente
        Me.pathImagen = pathImagen
        Me.pathDetalle = pathDetalle
        Me.pathArchivoEditable = pathArchivoEditable
        Me.pathArchivoFinal = pathArchivoFinal
        Me.estadoActual = estadoActual

        If Not insumos Is Nothing Then
            For Each ins As DiseñoInsumo In insumos
                ins.diseño = Me
            Next
        End If

        If historicoEstados IsNot Nothing Then
            For Each estado As HistoricoEstadosDiseño In historicoEstados
                estado.diseño = Me
            Next
        End If

        Me.historicoEstados = historicoEstados
        Me.insumos = insumos
    End Sub

    Sub New(ByVal id As Long, ByVal alto As Double, ByVal ancho As Double, ByVal nombre As String, ByVal puntadas As Integer,
        ByVal cliente As Cliente, ByVal pathImagen As String, ByVal pathDetalle As String, ByVal pathArchivoEditable As String,
        ByVal pathArchivoFinal As String, ByVal insumos As List(Of DiseñoInsumo))
        Me.idDiseño = id
        Me.alto = alto
        Me.ancho = ancho
        Me.nombre = nombre
        Me.puntadas = puntadas
        Me.cliente = cliente
        Me.pathImagen = pathImagen
        Me.pathDetalle = pathDetalle
        Me.pathArchivoEditable = pathArchivoEditable
        Me.pathArchivoFinal = pathArchivoFinal

        If Not insumos Is Nothing Then
            For Each ins As DiseñoInsumo In insumos
                ins.diseño = Me
            Next
        End If

        Me.insumos = insumos
    End Sub

    Public Property idDiseño() As Long
        Get
            Return _idDiseño
        End Get
        Set(ByVal value As Long)
            _idDiseño = value
        End Set
    End Property

    Public Property insumos() As List(Of DiseñoInsumo)
        Get
            Return _insumos
        End Get
        Set(ByVal value As List(Of DiseñoInsumo))
            _insumos = value
        End Set
    End Property

    Public Property puntadas() As Integer
        Get
            Return _puntadas
        End Get
        Set(ByVal Value As Integer)
            _puntadas = Value
        End Set
    End Property

    Public Property alto() As Double
        Get
            Return _alto
        End Get
        Set(ByVal Value As Double)
            _alto = Value
        End Set
    End Property

    Public Property nombre() As String
        Get
            Return _nombre
        End Get
        Set(ByVal Value As String)
            _nombre = Value
        End Set
    End Property

    Public Property ancho() As Double
        Get
            Return _ancho
        End Get
        Set(ByVal Value As Double)
            _ancho = Value
        End Set
    End Property

    Public Property cliente() As Cliente
        Get
            Return _cliente
        End Get
        Set(ByVal Value As Cliente)
            _cliente = Value
        End Set
    End Property

    Public Property borrado() As Boolean
        Get
            Return _borrado
        End Get
        Set(ByVal value As Boolean)
            _borrado = value
        End Set
    End Property

    Public Property pathImagen() As String
        Get
            Return _pathImagen
        End Get
        Set(ByVal value As String)
            _pathImagen = value
        End Set
    End Property

    Public Property pathDetalle() As String
        Get
            Return _pathDetalle
        End Get
        Set(ByVal value As String)
            _pathDetalle = value
        End Set
    End Property

    Public Property pathArchivoEditable() As String
        Get
            Return _pathArchivoEditable
        End Get
        Set(ByVal value As String)
            _pathArchivoEditable = value
        End Set
    End Property

    Public Property pathArchivoFinal() As String
        Get
            Return _pathArchivoFinal
        End Get
        Set(ByVal value As String)
            _pathArchivoFinal = value
        End Set
    End Property

    Public Property historicoEstados() As List(Of HistoricoEstadosDiseño)
        Get
            Return _historicoEstados
        End Get
        Set(ByVal value As List(Of HistoricoEstadosDiseño))
            _historicoEstados = value
        End Set
    End Property

    Public Property estadoActual() As EstadoDiseños

        Get
            Return _estadoActual
        End Get
        Set(ByVal value As EstadoDiseños)
            _estadoActual = value
        End Set
    End Property


End Class ' Diseño
