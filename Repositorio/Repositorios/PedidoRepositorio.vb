'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''
''  PedidoRepositorio.vb
''  Implementation of the Class PedidoRepositorio
''  Generated by Enterprise Architect
''  Created on:      09-ago-2012 11:28:03 p.m.
''  Original author: Diego
''  
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''  Modification history:
''  
''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''



Option Explicit On

Public Class PedidoRepositorio

    Dim pedidoTdg As PedidoTDG
    Dim historicoEstadosTdg As HistoricoEstadosPedidoTDG
    Dim tipotdg As TipoPedidoTDG
    Dim estadoTdg As EstadoPedidoTDG
    Dim produccionTdg As ProduccionTDG
    Dim clienteTdg As ClienteTDG

    Sub New(ByVal pedidoTdg As PedidoTDG, ByVal historicoEstadosTdg As HistoricoEstadosPedidoTDG, ByVal tipoTdg As TipoPedidoTDG,
             ByVal produccionTdg As ProduccionTDG, ByVal clienteTdg As ClienteTDG, ByVal estadoPedidoTdg As EstadoPedidoTDG)
        Me.pedidoTdg = pedidoTdg
        Me.historicoEstadosTdg = historicoEstadosTdg
        Me.tipotdg = tipoTdg
        Me.produccionTdg = produccionTdg
        Me.clienteTdg = clienteTdg
        Me.estadoTdg = estadoPedidoTdg
    End Sub

    Public Sub grabarPedido(ByRef pedido As Pedido)
        Me.pedidoTdg.grabar(pedido)

        If pedido.historicoEstados IsNot Nothing Then
            For Each estado As HistoricoEstados In pedido.historicoEstados
                Me.historicoEstadosTdg.grabar(estado)
            Next
        End If

        For Each trabajo As Produccion In pedido.trabajos
            Me.produccionTdg.grabar(trabajo)
        Next
    End Sub

    Public Sub actualizarPedido(ByVal pedido As Pedido)
        Me.pedidoTdg.actualizar(pedido)

        For Each estado As HistoricoEstados In pedido.historicoEstados
            If estado.nroEstado = 0 Then
                Me.historicoEstadosTdg.grabar(estado)
            Else
                Me.historicoEstadosTdg.actualizar(estado)

            End If
        Next

        For Each trabajo As Produccion In pedido.trabajos
            If trabajo.codProduccion = 0 Then
                Me.produccionTdg.grabar(trabajo)
            Else
                Me.produccionTdg.actualizar(trabajo)
            End If
        Next
    End Sub

    Public Function listarPedidos() As List(Of Pedido)
        Dim results As List(Of Pedido) = Me.pedidoTdg.cargarlistaPedidos(Nothing)

        For Each pedido As Pedido In results
            completarPedido(pedido)
        Next

        Return results
    End Function

    Public Function listarPedidosPorCliente(ByVal id As Long) As List(Of Pedido)
        Dim criteria As New List(Of Restriccion)
        criteria.Add(New Restriccion(pedidoTdg.CLIENTE, id))
        Dim results As List(Of Pedido) = Me.pedidoTdg.cargarlistaPedidos(criteria)

        For Each pedido As Pedido In results
            completarPedido(pedido)
        Next

        Return results
    End Function

    Public Function buscarPedidoPorCodigo(ByVal id As Long) As Pedido
        Dim criteria As New List(Of Restriccion)
        criteria.Add(New Restriccion(pedidoTdg.COD_PEDIDO, id))
        Dim result As Pedido = Me.pedidoTdg.buscarUnico(criteria)

        completarPedido(result)

        Return result
    End Function

    Public Function listarPedidosConRestriccion(ByVal cliente As String, ByVal estadoActual As String,
                                                ByVal fechaDesdeInicio As DateTime, ByVal fechaHastaInicio As DateTime,
                                                ByVal fechaDesdeFinal As DateTime, ByVal fechaHastaFinal As DateTime) As List(Of Pedido)

        Dim criteria As New List(Of Restriccion)

        If Not String.IsNullOrEmpty(cliente) Then
            criteria.Add(New Restriccion(pedidoTdg.CLIENTE, cliente))
        End If

        If Not String.IsNullOrEmpty(estadoActual) Then
            criteria.Add(New Restriccion(pedidoTdg.ESTADO_ACTUAL, estadoActual))
        End If

        If Not fechaDesdeInicio.Year = 1 Then
            criteria.Add(New Restriccion(pedidoTdg.FECHA_INICIO, fechaDesdeInicio, Restriccion.CONDICION_MAYOR_IGUAL))
        End If

        If Not fechaHastaInicio.Year = 1 Then
            criteria.Add(New Restriccion(pedidoTdg.FECHA_INICIO, fechaHastaInicio, Restriccion.CONDICION_MENOR_IGUAL))
        End If

        If Not fechaDesdeFinal.Year = 1 Then
            criteria.Add(New Restriccion(pedidoTdg.FECHA_FINAL, fechaDesdeFinal, Restriccion.CONDICION_MAYOR_IGUAL))
        End If

        If Not fechaHastaFinal.Year = 1 Then
            criteria.Add(New Restriccion(pedidoTdg.FECHA_FINAL, fechaHastaFinal, Restriccion.CONDICION_MENOR_IGUAL))
        End If

        Dim results As List(Of Pedido) = Me.pedidoTdg.cargarlistaPedidos(criteria)

        For Each pedido As Pedido In results
            completarPedido(pedido)
        Next

        Return results
    End Function

    Private Sub completarPedido(ByRef pedido As Pedido)
        Dim criteria As New List(Of Restriccion)

        criteria.Clear()
        criteria.Add(New Restriccion(HistoricoEstadosPedidoTDG.PEDIDO, pedido.codPedido))
        pedido.historicoEstados = Me.historicoEstadosTdg.cargarHistoricoEstados(criteria)

        criteria.Clear()
        criteria.Add(New Restriccion(TipoPedidoTDG.TIPO_PEDIDO, pedido.tipoPedido.tipoPedido))
        pedido.tipoPedido = Me.tipotdg.buscarUnico(criteria)

        criteria.Clear()
        criteria.Add(New Restriccion(produccionTdg.PEDIDO, pedido.codPedido))
        pedido.trabajos = Me.produccionTdg.cargarlistaProduccion(criteria)

        criteria.Clear()
        criteria.Add(New Restriccion(clienteTdg.ID_CLIENTE, pedido.cliente.idCliente))
        pedido.cliente = Me.clienteTdg.buscarUnico(criteria)

        criteria.Clear()
        pedido.estadoActual = Me.estadoTdg.buscarEstadosPorId(pedido.estadoActual.estadoPedido)
    End Sub

End Class ' PedidoRepositorio

