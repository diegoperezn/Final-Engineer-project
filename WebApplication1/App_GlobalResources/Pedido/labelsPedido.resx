<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="articulo" xml:space="preserve">
    <value>Articulo</value>
  </data>
  <data name="ayudaBuscarFechas" xml:space="preserve">
    <value>Al buscar la fechas posibles el sistema presente una lista de fechas posibles, y hora, en la que es posible realizar el trabajo, ofreciendo la libertad de seleccionar la mas conveniente</value>
  </data>
  <data name="ayudaCantidad" xml:space="preserve">
    <value>La cantidad del articulo que se desea bordar</value>
  </data>
  <data name="ayudaCliente" xml:space="preserve">
    <value>El cliente es el dueño del pedido que se desea cargar, a este se le facturara una ves terminado el trabajo</value>
  </data>
  <data name="ayudaComentario" xml:space="preserve">
    <value>El comentario es simplemente un campo para agregar cualquier informacion adicional a los campos presentados</value>
  </data>
  <data name="ayudaDiseño" xml:space="preserve">
    <value>El diseño, junto con el tipo de prenda, representa el articulo que se desea bordar, de aqui se desprendes los tiempos de realizacion y precio</value>
  </data>
  <data name="ayudaFecha" xml:space="preserve">
    <value>La fecha indica el dia en el que se deberan tener el material y desde la cual se dara el turno para realzar el trabajo</value>
  </data>
  <data name="ayudaGrabar" xml:space="preserve">
    <value>Una ves cargados todos los trabajos que componen el pedido se grabar el pedido y sus respectivos trabajos</value>
  </data>
  <data name="ayudaListaProduccion" xml:space="preserve">
    <value>La lista de produccion preseta todos los trabajos que componen un pedido, una ves que todos estos trabajos se realicen se pasara al pedido a estado "finalizado" y se generara la factura</value>
  </data>
  <data name="ayudaSeleccionarFecha" xml:space="preserve">
    <value>El registro seleccionado se cargara en forma definitiva el pedido</value>
  </data>
  <data name="ayudaTipoPrenda" xml:space="preserve">
    <value>El precio, en conjunto con el diseño, componen el articulo que se desea bordad</value>
  </data>
  <data name="buscarFechas" xml:space="preserve">
    <value>Buscar Fechas</value>
  </data>
  <data name="cantidad" xml:space="preserve">
    <value>Cantidad</value>
  </data>
  <data name="cliente" xml:space="preserve">
    <value>Cliente</value>
  </data>
  <data name="clientes" xml:space="preserve">
    <value>Clientes</value>
  </data>
  <data name="codPedido" xml:space="preserve">
    <value>Cod.</value>
  </data>
  <data name="codProduccion" xml:space="preserve">
    <value>Cod.</value>
  </data>
  <data name="comentario" xml:space="preserve">
    <value>Comentario</value>
  </data>
  <data name="crearTrabajo" xml:space="preserve">
    <value>creacion Trabajos</value>
  </data>
  <data name="datosPedido" xml:space="preserve">
    <value>Datos Pedido</value>
  </data>
  <data name="estado" xml:space="preserve">
    <value>Estados</value>
  </data>
  <data name="estadoActual" xml:space="preserve">
    <value>Estado</value>
  </data>
  <data name="fecha" xml:space="preserve">
    <value>Fecha turno</value>
  </data>
  <data name="fechaDsdFinal" xml:space="preserve">
    <value>Fecha dsd. Final</value>
  </data>
  <data name="fechaDsdInicio" xml:space="preserve">
    <value>Fecha dsd. Inicio</value>
  </data>
  <data name="fechaFinal" xml:space="preserve">
    <value>Fecha Final</value>
  </data>
  <data name="fechaHstFinal" xml:space="preserve">
    <value>Fecha hsta. Final</value>
  </data>
  <data name="fechaHstInicio" xml:space="preserve">
    <value>Fecha hsta. Inicio</value>
  </data>
  <data name="fechaInicio" xml:space="preserve">
    <value>Fecha Inicio</value>
  </data>
  <data name="labelTituloCreacion" xml:space="preserve">
    <value>Crear Pedido</value>
  </data>
  <data name="labelTituloDetalle" xml:space="preserve">
    <value>Detalle Pedido</value>
  </data>
  <data name="labelTituloLista" xml:space="preserve">
    <value>Busqueda Pedidos</value>
  </data>
  <data name="listaProduccion" xml:space="preserve">
    <value>Lista trabajos</value>
  </data>
  <data name="maquina" xml:space="preserve">
    <value>Maquina</value>
  </data>
  <data name="porcentajeRealizacion" xml:space="preserve">
    <value>Realizacion</value>
  </data>
  <data name="posiblesFechas" xml:space="preserve">
    <value>Posibles Fechas</value>
  </data>
  <data name="sinArticulo" xml:space="preserve">
    <value>No existe articulo para la combinacion diseño prenda</value>
  </data>
  <data name="trabajos" xml:space="preserve">
    <value>Trabajos</value>
  </data>
  <data name="utilizacion" xml:space="preserve">
    <value>Utilizacion</value>
  </data>
</root>